version: "3.8"
services:
  backend:
    build:
      context: "./backend"
      dockerfile: Dockerfile
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    environment:
      - "DATABASE_URL=${DATABASE_URL}"
      - "TWITTER_API_KEY=${TWITTER_API_KEY}"
      - "TWITTER_API_SECRET=${TWITTER_API_SECRET}"
      - "TWITTER_API_APP=${TWITTER_API_APP}"
      - "TWITTER_API_TOKEN=${TWITTER_API_TOKEN}"
      - "TWITTER_API_TOKEN_SECRET=${TWITTER_API_TOKEN_SECRET}"
      - "TWITTER_API_BEARER=${TWITTER_API_BEARER}"
      - "NODE_ENV=${NODE_ENV}"
      - "PORT=${BACKEND_PORT}"
    restart: unless-stopped
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
    links:
      - postgres
    networks:
      - database_network
      - web_network

  frontend:
    build:
      context: "./frontend"
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    restart: unless-stopped
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    links:
      - backend
    networks:
      - web_network

  postgres:
    image: postgres:14.6
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - database_network

volumes:
  postgres:
networks:
  database_network:
  web_network:
